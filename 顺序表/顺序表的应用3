// 求两个线性表的差集，假设顺序表A和顺序表B，求A-B

/*求两个线性表的差集*/
#define _CRT_SECURE_NO_WARNINGS 1
#include"SeqList.h"

void DelElem(SeqList* A, SeqList B);

int main()
{
	int i, j, flag;
	DataType a[] = { 12, 14, 16, 18, 20, 22, 24, 26, 28, 30 };
	DataType b[] = { 12,16,20,24,28,32,36,40 };
	SeqList A, B;

	InitList(&A);								// 初始化
	InitList(&B);

	for (i = 1; i <= sizeof(a) / sizeof(a[0]); i++) {		// 循环插入数组a的元素进入顺序表A
		if (InsertList(&A, i, a[i-1]) == 0) {
			break;
		}
	}

	printf("顺序表A中的元素\n");
	for (i = 0; i < A.length; i++) {
		printf("%4d",A.list[i]);
	}
	printf("\n");

	for (i = 1; i <= sizeof(b) / sizeof(b[0]); i++) {		// 循环插入数组b的元素进入顺序表B
		if (InsertList(&B, i, b[i - 1]) == 0) {
			break;
		}
	}

	printf("顺序表B中的元素\n");
	for (i = 0; i < B.length; i++) {
		printf("%4d", B.list[i]);
	}

	printf("\n");
	DelElem(&A, B);

	printf("将在A中出现的B的元素删除后，顺序表A中的元素\n");
	for (i = 0; i < A.length; i++) {
		printf("%4d", A.list[i]);
	}
	printf("\n");

	return 0;
}

// /*双重循环的方法*/
//void DelElem(SeqList* A, SeqList B) {
//	int i, j;
//	for (i = 0; i < B.length; i++) {
//		for (j = 0; j < A->length; j++) {
//			if (B.list[i] == A->list[j]) {
//				DeleteList(A, j+1, &(B.list[i]));			// j+1是因为删除的位置是list[j-1]
//			}
//		}
//	}
//}

/*利用基本操作的方法*/
void DelElem(SeqList* A, SeqList B) {				// 此时A作为指针，不是变量类型
	int i, flag, pos;
	DataType e;
	for (i = 1; i <= B.length; i++) {
		flag = GetElem(B, i, &e);					// 循环找出顺序表B中的第i个元素
		if (flag == 1) {							// 查找成功
			pos = LocateElem(*A, e);				// 在顺序表A中查找元素e；*A是SeqList的类型
			if (pos > 0) {							// 如果该元素存在
				DeleteList(A, pos, &e);				// 删除该元素
			}
		}
	}
}
